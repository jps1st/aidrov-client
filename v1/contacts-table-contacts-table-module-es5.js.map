{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/twotone-delete-forever.js","webpack:///node_modules/@iconify/icons-ic/twotone-history.js","webpack:///node_modules/@iconify/icons-ic/twotone-view-headline.js","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-data-table/contacts-data-table.component.ts","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-data-table/contacts-data-table.component.html","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-table-menu/contacts-table-menu.component.ts","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-table-menu/contacts-table-menu.component.html","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-table-routing.module.ts","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-table.component.ts","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-table.component.html","webpack:///src/app/pages/apps/contacts/contacts-table/contacts-table.module.ts"],"names":["data","exports","__esModule","$event","stopPropagation","openContact","ContactsDataTableComponent","pageSize","pageSizeOptions","toggleStar","dataSource","icMoreVert","icStar","icStarBorder","icDeleteForever","icEdit","changes","columns","visibleColumns","map","column","property","searchStr","filter","trim","toLowerCase","event","id","emit","paginator","sort","provide","useValue","appearance","selector","templateUrl","styleUrls","providers","animations","ContactsTableMenuComponent","items","type","icon","label","classes","filterChange","openAddNew","activeCategory","icPersonAdd","category","c","starred","routes","path","component","scrollDisabled","toolbarShadowEnabled","ContactsTableRoutingModule","forChild","imports","ContactsTableComponent","dialog","searchCtrl","searchStr$","valueChanges","pipe","menuOpen","tableData","tableColumns","cssClasses","icSearch","icContacts","icMenu","open","width","contact","find","openMenu","setData","ContactsTableModule","declarations"],"mappings":"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","file":"contacts-table-contacts-table-module-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M16 9H8v10h8V9zm-.47 7.12l-1.41 1.41L12 15.41l-2.12 2.12l-1.41-1.41L10.59 14l-2.13-2.12l1.41-1.41L12 12.59l2.12-2.12l1.41 1.41L13.41 14l2.12 2.12z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M14.12 10.47L12 12.59l-2.13-2.12l-1.41 1.41L10.59 14l-2.12 2.12l1.41 1.41L12 15.41l2.12 2.12l1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M13 3a9 9 0 0 0-9 9H1l3.89 3.89l.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7s-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0 0 13 21a9 9 0 0 0 0-18zm-1 5v5l4.25 2.52l.77-1.28l-3.52-2.09V8z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {TableColumn} from '../../../../../../@vex/interfaces/table-column.interface';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDeleteForever from '@iconify/icons-ic/twotone-delete-forever';\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions} from '@angular/material/form-field';\nimport {stagger20ms} from '../../../../../../@vex/animations/stagger.animation';\nimport {fadeInUp400ms} from '../../../../../../@vex/animations/fade-in-up.animation';\nimport {Contact} from '../../interfaces/contact.interface';\nimport {scaleFadeIn400ms} from '../../../../../../@vex/animations/scale-fade-in.animation';\n\n@Component({\n    selector: 'vex-contacts-data-table',\n    templateUrl: './contacts-data-table.component.html',\n    styleUrls: ['./contacts-data-table.component.scss'],\n    providers: [\n        {\n            provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n            useValue: {\n                appearance: 'standard'\n            } as MatFormFieldDefaultOptions\n        }\n    ],\n    animations: [\n        stagger20ms,\n        fadeInUp400ms,\n        scaleFadeIn400ms\n    ]\n})\nexport class ContactsDataTableComponent<T> implements OnInit, OnChanges, AfterViewInit {\n\n    @Input() data: T[];\n    @Input() columns: TableColumn<T>[];\n    @Input() pageSize = 20;\n    @Input() pageSizeOptions = [10, 20, 50];\n    @Input() searchStr: string;\n\n    @Output() toggleStar = new EventEmitter<Contact['id']>();\n    @Output() openContact = new EventEmitter<Contact['id']>();\n\n    visibleColumns: Array<keyof T | string>;\n    dataSource = new MatTableDataSource<T>();\n\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    icMoreVert = icMoreVert;\n    icStar = icStar;\n    icStarBorder = icStarBorder;\n    icDeleteForever = icDeleteForever;\n    icEdit = icEdit;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.columns) {\n            this.visibleColumns = this.columns.map(column => column.property);\n        }\n\n        if (changes.data) {\n            this.dataSource.data = this.data;\n        }\n\n        if (changes.searchStr) {\n            this.dataSource.filter = (this.searchStr || '').trim().toLowerCase();\n        }\n    }\n\n    emitToggleStar(event: Event, id: Contact['id']) {\n        event.stopPropagation();\n        this.toggleStar.emit(id);\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n}\n","<vex-scrollbar class=\"h-full relative\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n        <table [@stagger]=\"dataSource.filteredData\"\n               [dataSource]=\"dataSource\"\n               class=\"w-full\"\n               fxFlex=\"auto\"\n               mat-table\n               matSort>\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Model Properties Column -->\n            <ng-container *ngFor=\"let column of columns\">\n                <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\n                    <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\n                    <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\n                </ng-container>\n\n                <ng-container *ngIf=\"column.type === 'checkbox'\" [matColumnDef]=\"column.property\">\n                    <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\n                    <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\n                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                      [checked]=\"row[column.property]\"></mat-checkbox>\n                    </td>\n                </ng-container>\n\n                <ng-container *ngIf=\"column.type === 'image'\" [matColumnDef]=\"column.property\">\n                    <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\n                    <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\n                        <img [src]=\"row[column.property]\" class=\"avatar h-9 w-9 align-middle my-2\">\n                    </td>\n                </ng-container>\n\n                <ng-container *ngIf=\"column.type === 'button'\" [matColumnDef]=\"column.property\">\n                    <ng-container *ngIf=\"column.property === 'starred'\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\n                        <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" class=\"w-10\" mat-cell>\n                            <button (click)=\"emitToggleStar($event, row.id)\" mat-icon-button type=\"button\">\n                                <mat-icon *ngIf=\"row[column.property]\" [icIcon]=\"icStar\" class=\"text-amber\"></mat-icon>\n                                <mat-icon *ngIf=\"!row[column.property]\" [icIcon]=\"icStarBorder\"></mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"column.property === 'menu'\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\n                        <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" class=\"w-10\" mat-cell>\n                            <button (click)=\"$event.stopPropagation()\"\n                                    [matMenuTriggerFor]=\"contactMenu\"\n                                    mat-icon-button\n                                    type=\"button\">\n                                <mat-icon [icIcon]=\"icMoreVert\"></mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n\n\n            <tr *matHeaderRowDef=\"visibleColumns; sticky: true\" mat-header-row></tr>\n            <!--suppress UnnecessaryLabelJS -->\n            <tr (click)=\"openContact.emit(row.id)\"\n                *matRowDef=\"let row; columns: visibleColumns;\"\n                @fadeInUp\n                class=\"hover:bg-hover cursor-pointer\"\n                mat-row></tr>\n        </table>\n\n        <div *ngIf=\"dataSource.filteredData.length === 0\"\n             @scaleFadeIn\n             fxFlex=\"auto\"\n             fxLayout=\"column\"\n             fxLayoutAlign=\"center center\">\n            <img class=\"m-12 h-64\" src=\"assets/img/illustrations/idea.svg\">\n            <h2 class=\"headline m-0 text-center\">No contacts matching your filters</h2>\n        </div>\n\n        <mat-paginator [fxHide]=\"dataSource.filteredData.length === 0\"\n                       [pageSizeOptions]=\"pageSizeOptions\"\n                       [pageSize]=\"pageSize\"\n                       class=\"sticky bottom-0 left-0 right-0 border-t\"\n                       fxFlex=\"none\"></mat-paginator>\n    </div>\n</vex-scrollbar>\n\n<mat-menu #contactMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <button mat-menu-item>\n        <mat-icon [icIcon]=\"icEdit\"></mat-icon>\n        <span>Edit Contact</span>\n    </button>\n\n    <button mat-menu-item>\n        <mat-icon [icIcon]=\"icDeleteForever\"></mat-icon>\n        <span>Delete Contact</span>\n    </button>\n</mat-menu>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport icViewHeadline from '@iconify/icons-ic/twotone-view-headline';\nimport {contactsData} from '../../../../../../static-data/contacts';\nimport {Icon} from '@visurel/iconify-angular';\nimport {Contact} from '../../interfaces/contact.interface';\nimport {fadeInRight400ms} from '../../../../../../@vex/animations/fade-in-right.animation';\nimport icHistory from '@iconify/icons-ic/twotone-history';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icLabel from '@iconify/icons-ic/twotone-label';\nimport icPersonAdd from '@iconify/icons-ic/twotone-person-add';\nimport {stagger40ms} from '../../../../../../@vex/animations/stagger.animation';\n\nexport interface ContactsTableMenu {\n    type: 'link' | 'subheading';\n    id?: 'frequently' | 'starred' | 'all' | 'family' | 'friends' | 'colleagues' | 'business';\n    icon?: Icon;\n    label: string;\n    classes?: {\n        icon?: string;\n    };\n}\n\n@Component({\n    selector: 'vex-contacts-table-menu',\n    templateUrl: './contacts-table-menu.component.html',\n    animations: [fadeInRight400ms, stagger40ms]\n})\nexport class ContactsTableMenuComponent implements OnInit {\n\n    @Input() items: ContactsTableMenu[] = [\n        {\n            type: 'link',\n            id: 'all',\n            icon: icViewHeadline,\n            label: 'All Contacts'\n        },\n        {\n            type: 'link',\n            id: 'frequently',\n            icon: icHistory,\n            label: 'Frequently contacted'\n        },\n        {\n            type: 'link',\n            id: 'starred',\n            icon: icStar,\n            label: 'Starred'\n        },\n        {\n            type: 'subheading',\n            label: 'Labels'\n        },\n        {\n            type: 'link',\n            id: 'family',\n            icon: icLabel,\n            label: 'Family',\n            classes: {\n                icon: 'text-primary'\n            }\n        },\n        {\n            type: 'link',\n            id: 'friends',\n            icon: icLabel,\n            label: 'Friends',\n            classes: {\n                icon: 'text-green'\n            }\n        },\n        {\n            type: 'link',\n            id: 'colleagues',\n            icon: icLabel,\n            label: 'Colleagues',\n            classes: {\n                icon: 'text-amber'\n            }\n        },\n        {\n            type: 'link',\n            id: 'business',\n            icon: icLabel,\n            label: 'Business',\n            classes: {\n                icon: 'text-gray'\n            }\n        },\n    ];\n\n    @Output() filterChange = new EventEmitter<Contact[]>();\n    @Output() openAddNew = new EventEmitter<void>();\n\n    activeCategory: ContactsTableMenu['id'] = 'all';\n    icPersonAdd = icPersonAdd;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    setFilter(category: ContactsTableMenu['id']) {\n        this.activeCategory = category;\n\n        if (category === 'starred') {\n            return this.filterChange.emit(contactsData.filter(c => c.starred));\n        }\n\n        if (category === 'all') {\n            return this.filterChange.emit(contactsData);\n        }\n\n        if (category === 'frequently'\n            || category === 'family'\n            || category === 'friends'\n            || category === 'colleagues'\n            || category === 'business') {\n            return this.filterChange.emit([]);\n        }\n    }\n\n    isActive(category: ContactsTableMenu['id']) {\n        return this.activeCategory === category;\n    }\n}\n","<div @stagger class=\"max-w-xxxs w-full\">\n    <div class=\"h-14 mb-6 flex bg-primary px-gutter sm:px-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <button (click)=\"openAddNew.emit()\" class=\"flex-auto\" mat-raised-button type=\"button\">\n            <ic-icon [icon]=\"icPersonAdd\" class=\"ltr:mr-3 rtl:ml-3\" inline=\"true\" size=\"18px\"></ic-icon>\n            <span>ADD CONTACT</span>\n        </button>\n    </div>\n\n    <div class=\"px-gutter sm:px-0\">\n        <ng-container *ngFor=\"let item of items\">\n            <a (click)=\"setFilter(item.id)\"\n               *ngIf=\"item.type === 'link'\"\n               @fadeInRight\n               [class.bg-hover]=\"isActive(item.id)\"\n               [class.text-primary]=\"isActive(item.id)\"\n               class=\"list-item mt-2 no-underline flex items-center\"\n               matRipple>\n                <ic-icon [icon]=\"item.icon\" [ngClass]=\"item.classes?.icon\" class=\"ltr:mr-3 rtl:ml-3\"\n                         size=\"24px\"></ic-icon>\n                <span>{{ item.label }}</span>\n            </a>\n\n            <h3 *ngIf=\"item.type === 'subheading'\"\n                @fadeInRight\n                class=\"caption text-secondary uppercase font-medium mb-0 mt-6\">{{ item.label }}</h3>\n        </ng-container>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {ContactsTableComponent} from './contacts-table.component';\nimport {VexRoutes} from '../../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n    {\n        path: '',\n        component: ContactsTableComponent,\n        data: {\n            scrollDisabled: true,\n            toolbarShadowEnabled: true\n        }\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ContactsTableRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport {scaleIn400ms} from '../../../../../@vex/animations/scale-in.animation';\nimport {fadeInRight400ms} from '../../../../../@vex/animations/fade-in-right.animation';\nimport {TableColumn} from '../../../../../@vex/interfaces/table-column.interface';\nimport {contactsData} from '../../../../../static-data/contacts';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime} from 'rxjs/operators';\nimport {stagger40ms} from '../../../../../@vex/animations/stagger.animation';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ContactsEditComponent} from '../components/contacts-edit/contacts-edit.component';\nimport {Contact} from '../interfaces/contact.interface';\nimport icMenu from '@iconify/icons-ic/twotone-menu';\n\n@Component({\n    selector: 'vex-contacts-table',\n    templateUrl: './contacts-table.component.html',\n    animations: [\n        stagger40ms,\n        scaleIn400ms,\n        fadeInRight400ms\n    ]\n})\nexport class ContactsTableComponent implements OnInit {\n\n    searchCtrl = new FormControl();\n\n    searchStr$ = this.searchCtrl.valueChanges.pipe(\n        debounceTime(10)\n    );\n\n    menuOpen = false;\n\n    activeCategory: 'frequently' | 'starred' | 'all' | 'family' | 'friends' | 'colleagues' | 'business' = 'all';\n    tableData = contactsData;\n    tableColumns: TableColumn<Contact>[] = [\n        {\n            label: '',\n            property: 'selected',\n            type: 'checkbox',\n            cssClasses: ['w-6']\n        },\n        {\n            label: '',\n            property: 'imageSrc',\n            type: 'image',\n            cssClasses: ['min-w-9']\n        },\n        {\n            label: 'NAME',\n            property: 'name',\n            type: 'text',\n            cssClasses: ['font-medium']\n        },\n        {\n            label: 'EMAIL',\n            property: 'email',\n            type: 'text',\n            cssClasses: ['text-secondary']\n        },\n        {\n            label: 'PHONE',\n            property: 'phone',\n            type: 'text',\n            cssClasses: ['text-secondary']\n        },\n        {\n            label: '',\n            property: 'starred',\n            type: 'button',\n            cssClasses: ['text-secondary', 'w-10']\n        },\n        {\n            label: '',\n            property: 'menu',\n            type: 'button',\n            cssClasses: ['text-secondary', 'w-10']\n        },\n    ];\n\n    icStar = icStar;\n    icSearch = icSearch;\n    icContacts = icContacts;\n    icMenu = icMenu;\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n    }\n\n    openContact(id?: Contact['id']) {\n        this.dialog.open(ContactsEditComponent, {\n            data: id || null,\n            width: '600px'\n        });\n    }\n\n    toggleStar(id: Contact['id']) {\n        const contact = this.tableData.find(c => c.id === id);\n\n        if (contact) {\n            contact.starred = !contact.starred;\n        }\n    }\n\n    setData(data: Contact[]) {\n        this.tableData = data;\n        this.menuOpen = false;\n    }\n\n    openMenu() {\n        this.menuOpen = true;\n    }\n}\n","<div class=\"w-full h-full flex flex-col\">\n    <div class=\"px-gutter pt-6 pb-20 bg-primary flex-none\">\n        <div class=\"flex items-center\" vexContainer>\n            <button (click)=\"openMenu()\" @scaleIn class=\"sm:hidden text-primary-contrast\" mat-icon-button type=\"button\">\n                <mat-icon [icIcon]=\"icMenu\"></mat-icon>\n            </button>\n            <h2 class=\"headline text-primary-contrast m-0 flex items-center w-full max-w-xxxs mr-6\">\n                <ic-icon @scaleIn [icon]=\"icContacts\" class=\"hidden sm:block\"></ic-icon>\n                <span @fadeInRight class=\"ml-4 block\">Contacts</span>\n            </h2>\n\n            <div class=\"hidden sm:flex items-center bg-card rounded-full overflow-hidden relative ltr:pl-5 rtl:pr-5 h-12 max-w-md w-full shadow-8 mx-auto\">\n                <ic-icon [icon]=\"icSearch\" class=\"text-secondary flex-none\" size=\"24px\"></ic-icon>\n                <input [formControl]=\"searchCtrl\"\n                       class=\"border-0 h-12 outline-none ltr:pl-4 rtl:pr-4 placeholder:text-secondary bg-card flex-auto\"\n                       placeholder=\"Search Contacts...\"\n                       type=\"text\"/>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"-mt-14 pt-0 overflow-hidden flex\" vexContainer>\n\n        <mat-drawer-container class=\"bg-transparent flex-auto flex\">\n            <mat-drawer [(opened)]=\"menuOpen\" mode=\"over\">\n                <vex-contacts-table-menu (filterChange)=\"setData($event)\"\n                                         (openAddNew)=\"openContact()\"\n                                         class=\"sm:hidden\"></vex-contacts-table-menu>\n            </mat-drawer>\n            <mat-drawer-content class=\"p-gutter pt-0 flex-auto flex items-start\">\n                <vex-contacts-table-menu (filterChange)=\"setData($event)\"\n                                         (openAddNew)=\"openContact()\"\n                                         class=\"hidden sm:block mr-6\"></vex-contacts-table-menu>\n\n                <div class=\"card h-full overflow-hidden flex-auto\">\n                    <vex-contacts-data-table (openContact)=\"openContact($event)\"\n                                             (toggleStar)=\"toggleStar($event)\"\n                                             [columns]=\"tableColumns\"\n                                             [data]=\"tableData\"\n                                             [searchStr]=\"searchStr$ | async\"></vex-contacts-data-table>\n                </div>\n            </mat-drawer-content>\n\n        </mat-drawer-container>\n    </div>\n</div>\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ContactsTableRoutingModule} from './contacts-table-routing.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {IconModule} from '@visurel/iconify-angular';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {ScrollbarModule} from '../../../../../@vex/components/scrollbar/scrollbar.module';\nimport {ContactsTableComponent} from './contacts-table.component';\nimport {ContactsDataTableComponent} from './contacts-data-table/contacts-data-table.component';\nimport {ContactsEditModule} from '../components/contacts-edit/contacts-edit.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ContainerModule} from '../../../../../@vex/directives/container/container.module';\nimport {ContactsTableMenuComponent} from './contacts-table-menu/contacts-table-menu.component';\nimport {MatSidenavModule} from '@angular/material/sidenav';\n\n\n@NgModule({\n    declarations: [ContactsTableComponent, ContactsDataTableComponent, ContactsTableMenuComponent],\n    imports: [\n        CommonModule,\n        ContactsTableRoutingModule,\n        FlexLayoutModule,\n        IconModule,\n        MatButtonModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatDialogModule,\n        ScrollbarModule,\n        ContactsEditModule,\n        ReactiveFormsModule,\n        ContainerModule,\n        MatSidenavModule\n    ]\n})\nexport class ContactsTableModule {\n}\n"]}