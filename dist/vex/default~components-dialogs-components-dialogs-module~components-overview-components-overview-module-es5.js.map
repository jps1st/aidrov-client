{"version":3,"sources":["webpack:///src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.component.ts","webpack:///src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.component.html","webpack:///src/app/pages/ui/components/components-overview/components/components-overview-dialogs/components-overview-dialogs.module.ts"],"names":["ComponentsOverviewDialogsComponent","dialog","dialogHTML","open","DemoDialogComponent","disableClose","width","afterClosed","subscribe","result","openDialog","selector","templateUrl","styleUrls","dialogRef","icClose","answer","close","template","ComponentsOverviewDialogsModule","declarations","imports","exports","entryComponents"],"mappings":"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","file":"default~components-dialogs-components-dialogs-module~components-overview-components-overview-module-es5.js","sourcesContent":["import {Component} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\n\r\n@Component({\r\n    selector: 'vex-components-overview-dialogs',\r\n    templateUrl: './components-overview-dialogs.component.html',\r\n    styleUrls: ['./components-overview-dialogs.component.scss']\r\n})\r\nexport class ComponentsOverviewDialogsComponent {\r\n\r\n    result: string;\r\n\r\n    dialogHTML =\r\n        `<button mat-raised-button type=\"button\" (click)=\"openDialog()\" color=\"primary\">Open Dialog</button>\r\n<p *ngIf=\"result\">You chose: {{ result }}</p>\r\n`;\r\n\r\n    constructor(private dialog: MatDialog) {\r\n    }\r\n\r\n    openDialog() {\r\n        this.dialog.open(DemoDialogComponent, {\r\n            disableClose: false,\r\n            width: '400px'\r\n        }).afterClosed().subscribe(result => {\r\n            this.result = result;\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'vex-components-overview-demo-dialog',\r\n    template: `\r\n        <div mat-dialog-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>Question</div>\r\n            <button type=\"button\" mat-icon-button (click)=\"close('No answer')\" tabindex=\"-1\">\r\n                <mat-icon [icIcon]=\"icClose\"></mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n        <mat-dialog-content>\r\n            <p>Do you like Pizza?</p>\r\n        </mat-dialog-content>\r\n\r\n\r\n        <mat-dialog-actions align=\"end\">\r\n            <button mat-button (click)=\"close('No')\">NO</button>\r\n            <button mat-button color=\"primary\" (click)=\"close('Yes')\">YES</button>\r\n        </mat-dialog-actions>\r\n    `\r\n})\r\nexport class DemoDialogComponent {\r\n\r\n    icClose = icClose;\r\n\r\n    constructor(private dialogRef: MatDialogRef<DemoDialogComponent>) {\r\n    }\r\n\r\n    close(answer: string) {\r\n        this.dialogRef.close(answer);\r\n    }\r\n}\r\n","<div class=\"card\" fxLayout=\"column\" fxLayout.gt-sm=\"row\">\r\n    <div class=\"p-6\">\r\n        <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"24px\">\r\n            <button (click)=\"openDialog()\" color=\"primary\" mat-raised-button type=\"button\">OPEN DIALOG</button>\r\n            <p *ngIf=\"result\">You answered with: {{ result }}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"border-l\" fxFlex>\r\n        <div class=\"p-6\">\r\n            <h2 class=\"title mt-0 mb-4\">Dialogs</h2>\r\n            <h4 class=\"body-2 text-secondary m-0\">&lt;mat-dialog&gt;</h4>\r\n        </div>\r\n\r\n        <mat-tab-group class=\"vex-tabs\">\r\n            <mat-tab label=\"DESCRIPTION\">\r\n                <p class=\"p-6\">\r\n                    Dialogs contain text and UI controls. They retain focus until dismissed or a required action has\r\n                    been taken.\r\n                    Use dialogs sparingly because they are interruptive.\r\n                    <br>\r\n                    <br><span class=\"semi-bold\">Some dialog types include:</span>\r\n                    <br><span class=\"semi-bold\">Alerts</span> are urgent interruptions that inform about a situation and\r\n                    require\r\n                    acknowledgement.\r\n                    <br><span class=\"semi-bold\">Simple menus</span> display options for list items, whereas simple\r\n                    dialogs can\r\n                    provide details or actions about a list item.\r\n                    <br><span class=\"semi-bold\">Confirmation dialogs</span> require users to explicitly confirm a\r\n                    choice.\r\n                </p>\r\n            </mat-tab>\r\n            <mat-tab label=\"SOURCE CODE\">\r\n                <pre><code [vexHighlight]=\"dialogHTML\"></code></pre>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>\r\n\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ComponentsOverviewDialogsComponent, DemoDialogComponent} from './components-overview-dialogs.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {HighlightModule} from '../../../../../../../@vex/components/highlight/highlight.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {IconModule} from '@visurel/iconify-angular';\n\n\n@NgModule({\n    declarations: [ComponentsOverviewDialogsComponent, DemoDialogComponent],\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MatTabsModule,\n        HighlightModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatIconModule,\n        IconModule\n    ],\n    exports: [ComponentsOverviewDialogsComponent],\n    entryComponents: [DemoDialogComponent]\n})\nexport class ComponentsOverviewDialogsModule {\n}\n"]}