{"version":3,"sources":["webpack:///src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.ts","webpack:///src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.html","webpack:///src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.module.ts"],"names":["stateCtrl","ComponentsOverviewAutocompleteComponent","autocompleteHTML","states","name","population","flag","icClose","icArrowDropDown","filteredStates$","valueChanges","pipe","state","filterStates","slice","filter","toLowerCase","indexOf","selector","templateUrl","styleUrls","ComponentsOverviewAutocompleteModule","declarations","imports","exports"],"mappings":"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","file":"default~components-autocomplete-components-autocomplete-module~components-overview-components-overview-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {CountryState} from '../../../../forms/form-elements/form-elements.component';\r\nimport icArrowDropDown from '@iconify/icons-ic/twotone-arrow-drop-down';\r\nimport icClose from '@iconify/icons-ic/twotone-close';\r\n\r\n@Component({\r\n    selector: 'vex-components-overview-autocomplete',\r\n    templateUrl: './components-overview-autocomplete.component.html',\r\n    styleUrls: ['./components-overview-autocomplete.component.scss']\r\n})\r\nexport class ComponentsOverviewAutocompleteComponent implements OnInit {\r\n\r\n    autocompleteHTML =\r\n        `<mat-input-container>\r\n  <mat-label>State</mat-label>\r\n  <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n      {{ option }}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n</mat-input-container>\r\n`;\r\n\r\n    stateCtrl: FormControl;\r\n    filteredStates$: Observable<CountryState[]>;\r\n\r\n    states: CountryState[] = [\r\n        {\r\n            name: 'Arkansas',\r\n            population: '2.978M',\r\n            // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n            flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n        },\r\n        {\r\n            name: 'California',\r\n            population: '39.14M',\r\n            // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n            flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n        },\r\n        {\r\n            name: 'Florida',\r\n            population: '20.27M',\r\n            // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n            flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n        },\r\n        {\r\n            name: 'Texas',\r\n            population: '27.47M',\r\n            // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n            flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n        }\r\n    ];\r\n\r\n    icClose = icClose;\r\n    icArrowDropDown = icArrowDropDown;\r\n\r\n    ngOnInit() {\r\n        this.stateCtrl = new FormControl();\r\n        this.filteredStates$ = this.stateCtrl.valueChanges.pipe(\r\n            startWith(''),\r\n            map(state => state ? this.filterStates(state) : this.states.slice())\r\n        );\r\n    }\r\n\r\n    filterStates(name: string) {\r\n        return this.states.filter(state =>\r\n            state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n    }\r\n}\r\n","<div class=\"card\" fxLayout=\"column\" fxLayout.gt-sm=\"row\">\r\n    <div class=\"p-6\" fxFlex=\"none\">\r\n        <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n\r\n        <mat-form-field class=\"w-300 max-w-full\">\r\n            <mat-label>Select a State</mat-label>\r\n            <input [formControl]=\"stateCtrl\" [matAutocomplete]=\"auto\" matInput>\r\n            <mat-autocomplete #auto=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let state of filteredStates$ | async\" [value]=\"state.name\">\r\n                    <img [src]=\"state.flag\" class=\"align-middle mr-4 shadow-6 h-6 inline-block\">\r\n                    <span class=\"body-1\">{{ state.name }}</span>\r\n                    <span class=\"text-hint\"> | </span>\r\n                    <span class=\"caption text-secondary\">Population: {{ state.population }}</span>\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n            <button (click)=\"stateCtrl.reset()\" *ngIf=\"stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n                <mat-icon [icIcon]=\"icClose\" [inline]=\"true\" size=\"24px\"></mat-icon>\r\n            </button>\r\n            <button *ngIf=\"!stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n                <mat-icon [icIcon]=\"icArrowDropDown\" [inline]=\"true\" size=\"24px\"></mat-icon>\r\n            </button>\r\n            <mat-hint>Add this hint for a better UX!</mat-hint>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"border-l\" fxFlex=\"auto\">\r\n        <div class=\"p-6\">\r\n            <h2 class=\"title mt-0 mb-4\">Autocomplete</h2>\r\n            <h4 class=\"body-2 text-secondary m-0\">&lt;mat-autocomplete&gt;</h4>\r\n        </div>\r\n\r\n        <mat-tab-group class=\"vex-tabs\">\r\n            <mat-tab label=\"DESCRIPTION\">\r\n                <div class=\"p-6\">\r\n                    <p class=\"m-0\">\r\n                        Input text can be used with autocomplete to help users who have limited literacy or who write in\r\n                        a foreign\r\n                        language.\r\n                        <br>\r\n                        <br><span class=\"font-medium\">For example, autocomplete can:</span>\r\n                    </p>\r\n                    <ul>\r\n                        <li>Suggest input as itâ€™s typed (refreshing suggestions with each keystroke)</li>\r\n                        <li>Fill a field with default input text</li>\r\n                        <li>Pressing the return button accepts the current autocomplete suggestion.</li>\r\n                    </ul>\r\n                </div>\r\n            </mat-tab>\r\n            <mat-tab label=\"SOURCE CODE\">\r\n                <pre><code [vexHighlight]=\"autocompleteHTML\"></code></pre>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ComponentsOverviewAutocompleteComponent} from './components-overview-autocomplete.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HighlightModule} from '../../../../../../../@vex/components/highlight/highlight.module';\nimport {IconModule} from '@visurel/iconify-angular';\n\n\n@NgModule({\n    declarations: [ComponentsOverviewAutocompleteComponent],\n    imports: [\n        CommonModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatButtonModule,\n        FlexLayoutModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        HighlightModule,\n        IconModule\n    ],\n    exports: [ComponentsOverviewAutocompleteComponent]\n})\nexport class ComponentsOverviewAutocompleteModule {\n}\n"]}